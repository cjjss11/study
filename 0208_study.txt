SWEA
import sys
sys.stdin = open('s_input.txt','r')
T = int(input())
for test_case in range(1, T + 1):
    N = int(input())
    lst = list(map(int,input().split()))
    maxvalue = lst[0]
    minvalue = lst[0]
    for i in lst:
        if i > maxvalue:
            maxvalue = i
        if i < minvalue:
            minvalue = i
    print(f'#{test_case} {maxvalue-minvalue}')
---------------------------------------------------------------------
import sys
sys.stdin = open('s_input.txt','r')
T = int(input())
for test_case in range(1, T + 1):
    N = int(input())
    lst = list(map(int,input()))
    bucket = [0]*10
    for i in range(len(lst)):
        bucket[lst[i]] += 1
    maxvalue = -21e8
    maxi = 0
    for i in range(len(bucket)):
        if bucket[i] > maxvalue:
            maxvalue = bucket[i]
        if bucket[i] == maxvalue:
            if i > maxi:
                maxi = i
    print(f'#{test_case} {maxi} {maxvalue}')
---------------------------------------------------------------------
import sys
sys.stdin = open('s_input.txt','r')
T = int(input())
for test_case in range(1, T + 1):
    N,M = map(int,input().split())
    lst = list(map(int,input().split()))
    def getsum(a):
        sum = 0
        for i in range(M):
            sum += lst[i+a]
        return sum
    maxvalue = -21e8
    minvalue = 21e8
    for i in range(N-M+1):
        result = getsum(i)
        if result > maxvalue:
            maxvalue = result
        if result < minvalue:
            minvalue = result
    print(f'#{test_case} {maxvalue-minvalue}')
---------------------------------------------------------------------
import sys
sys.stdin = open('s_input.txt','r')
T = 10
for test_case in range(1, T + 1):
    N = int(input())
    lst = [list(map(int,input().split())) for _ in range(N)]
    direct_i = [-1,1,0,0]
    direct_j = [0,0,-1,1]
    def minus(a,b):
        sum = 0
        for i in range(4):
            di = a + direct_i[i]
            dj = b + direct_j[i]
            if 0 <= di < N and 0 <= dj < N:
                sum += abs(lst[di][dj]-lst[a][b])
        return sum
    sum1 = 0
    for i in range(N):
        for j in range(N):
            result = minus(i,j)
            sum1 += result
    print(f'#{test_case} {sum1}')