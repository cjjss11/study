SWEA
9367 - 점점 커지는 당근의 개수
import sys
sys.stdin = open('input.txt','r')
T = int(input())
for test_case in range(1, T + 1):
    N = int(input())
    lst = list(map(int,input().split()))
    cnt_lst = []
    cnt = 1
    for i in range(N-1):
        if lst[i+1] - lst[i] == 1:
            cnt += 1
        else:
            cnt_lst.append(cnt)
            cnt = 1
        if i + 1 == N - 1:
            cnt_lst.append(cnt)
    maxvalue = -21e8
    for i in cnt_lst:
        if i > maxvalue:
            maxvalue = i
    print(f'#{test_case} {maxvalue}')

--------------------------------------------------------------------------------------------------

백준
2309번 - 일곱 난쟁이
import sys
sys.stdin = open('input.txt','r')
lst = []
for i in range(9):
    num = int(input())
    lst.append(num)
sum = 0
result = []
sum2 = 0
for i in range(9):
    sum += lst[i]
sum2 = sum - 100
idx_i = 0
idx_j = 0
for i in range(8):
    for j in range(i+1,9):
        if lst[i] + lst[j] == sum2:
            idx_i = i
            idx_j = j
            break
        else:
            break
lst.pop(idx_j)
lst.pop(idx_i)
for i in range(len(lst)-1):
    for j in range(i+1,len(lst)):
        if lst[i] > lst[j]:
            lst[i],lst[j] = lst[j],lst[i]
for i in lst:
    print(i)

--------------------------------------------------------------------------------------------------

민코딩 28 - 5번
lst = [0,1,2,3,4,5,6,7,8]
N = int(input())
arr = [list(map(int,input().split())) for _ in range(N)]
path = [0]*3
def dfs(level):
    if level == 2:
        for i in range(3):
            print(path[i],end=' ')
        print()
        return
    for i in range(9):
        if arr[level][i] == 1:
            path[level+1] = lst[i]
            dfs(level+1)
dfs(0)

--------------------------------------------------------------------------------------------------

SWEA
1945 - 간단한 소인수분해
import sys
sys.stdin = open('input.txt','r')
T = int(input())
for test_case in range(1, T + 1):
    N = int(input())
    lst = [2,3,5,7,11]
    cnt_lst = [0]*5
    for i in range(len(lst)):
        if N == 1:
            break
        cnt = 0
        while 1:
            if N % lst[i] == 0:
                cnt += 1
                N = N // lst[i]
            else:
                cnt_lst[i] = cnt
                break
    print(f'#{test_case}',end=' ')
    print(*cnt_lst)

--------------------------------------------------------------------------------------------------

SWEA
1210 - [S/W 문제해결 기본] 2일차 - Ladder1
import sys
sys.stdin = open('input.txt','r')
for test_case in range(1, 11):
    T = int(input())
    arr = [list(map(int,input().split())) for _ in range(100)]
    direct_i = [0,0,-1]
    direct_j = [-1,1,0]
    used = [[0]*100 for _ in range(100)]
    answer = 0
    for i in range(100):
        for j in range(100):
            if arr[i][j] == 2:
                y = i
                x = j
    used[y][x] = 1
    while 1:
        if y == 0:
            answer = x
            break
        for i in range(3):
            dy = y + direct_i[i]
            dx = x + direct_j[i]
            if 0 <= dy < 100 and 0 <= dx < 100:
                if arr[dy][dx] == 1:
                    if used[dy][dx] == 0:
                        used[dy][dx] = 1
                        y = dy
                        x = dx
                        break
    print(f'#{T} {answer}')

--------------------------------------------------------------------------------------------------

SWEA
1211 - [S/W 문제해결 기본] 2일차 - Ladder2
import sys
sys.stdin = open('input.txt','r')
for test_case in range(1, 11):
    T = int(input())
    arr = [list(map(int,input().split())) for _ in range(100)]
    direct_i = [0,0,1]
    direct_j = [-1,1,0]
    used = [[0]*100 for _ in range(100)]
    cnt = 1
    cnt_lst = [0]*100
    def dfs(y,x,idx):
        global cnt
        if y == 99:
            cnt_lst[idx] = cnt
            cnt = 1
            return
        for i in range(3):
            dy = y + direct_i[i]
            dx = x + direct_j[i]
            if 0 <= dy < 100 and 0 <= dx < 100:
                if arr[dy][dx] == 1:
                    if dx == x - 1 or dx == x + 1:
                        if used[dy][dx] == 0:
                            used[dy][dx] = 1
                            cnt += 1
                            dfs(dy,dx,idx)
                            used[dy][dx] = 0
                            break
                    else:
                        if used[dy][dx] == 0:
                            used[dy][dx] = 1
                            cnt += 1
                            dfs(dy,dx,idx)
                            used[dy][dx] = 0
                            break
    minvalue = 21e8
    idx = 0
    result = 0
    for i in range(100):
        if arr[0][i] == 1:
            used[0][i] = 1
            idx = i
            dfs(0,i,idx)
    for i in range(len(cnt_lst)):
        if cnt_lst[i] != 0:
            if cnt_lst[i] < minvalue:
                minvalue = cnt_lst[i]
                result = i
    print(f'#{T} {result}')

lst = [1,2,3,4,5,6,7,8,9,10]
result = []
while 1:
maxvalue = -21e8
minvalue = 21e8
    for i in range(len(lst)):
        if lst[i] > maxvalue:
            maxvalue = lst[i]
            lst.remove(maxvalue)
            result.append(maxvalue)
        if lst[i] < minvalue:
            minvalue = lst[i]
            lst.remove(minvalue)
            result.append(minvalue)
    if len(lst) == 0:
        break

--------------------------------------------------------------------------------------------------

SWEA
16277 - 특별한 정렬
import sys
sys.stdin = open('input.txt','r')
T = int(input())
for test_case in range(1, T + 1):
    N = int(input())
    lst = list(map(int,input().split()))
    result = []
    while 1:
        maxvalue = -21e8
        minvalue = 21e8
        for i in range(len(lst)):
            if lst[i] > maxvalue:
                maxvalue = lst[i]
            if lst[i] < minvalue:
                minvalue = lst[i]
        result.append(maxvalue)
        result.append(minvalue)
        lst.remove(maxvalue)
        lst.remove(minvalue)
        if len(result) == 10:
            break
    print(f'#{test_case}',end=' ')
    print(*result)

--------------------------------------------------------------------------------------------------

SWEA
13749 - 어디에 단어가 들어갈 수 있을까
import sys
sys.stdin = open('input.txt','r')
T = int(input())
for test_case in range(1, T + 1):
    N,K = map(int,input().split())
    arr = [list(map(int,input().split())) for _ in range(N)]
    cnt_lst = []
    result = 0
    for i in range(N):
        cnt = 0
        for j in range(N):
            if arr[i][j] == 1:
                cnt += 1
                if j == N - 1:
                    if cnt == K:
                        cnt_lst.append(cnt)
                    elif cnt != K:
                        cnt = 0
            else:
                if cnt == K:
                    cnt_lst.append(cnt)
                    cnt = 0
                elif cnt != K:
                    cnt = 0
    for j in range(N):
        cnt = 0
        for i in range(N):
            if arr[i][j] == 1:
                cnt += 1
                if i == N - 1:
                    if cnt == K:
                        cnt_lst.append(cnt)
                    elif cnt != K:
                        cnt = 0
            else:
                if cnt == K:
                    cnt_lst.append(cnt)
                    cnt = 0
                elif cnt != K:
                    cnt = 0
    for i in cnt_lst:
        result += 1
    print(f'#{test_case} {result}')